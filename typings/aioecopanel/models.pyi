"""
This type stub file was generated by pyright.
"""

from dataclasses import dataclass
from typing import Any, Self, Union

""" Model for BACnet add-on data."""

@dataclass
class Object:
    """Represent a BACnet object."""

    objectIdentifier: str
    objectType: str
    objectName: str
    description: str
    presentValue: Union[int, float, str, bool]
    statusFlags: Union[str, list[Any]]
    units: str
    outOfService: bool
    eventState: str
    reliability: str
    covIncrement: Union[int, float]
    vendorName: str
    modelName: str
    stateText: list[Any]
    numberOfStates: int
    notificationClass: int
    minPresValue: Union[int, float, str, bool]
    maxPresValue: Union[int, float, str, bool]
    resolution: Union[int, float]
    serialNumber: str
    def __post_init__(self) -> None: ...
    @property
    def id(self) -> str: ...
    def __getattr__(self, name: str) -> str | Any: ...

@dataclass
class Device:
    """Represent a BACnet Device."""

    objects: dict[str, Object]
    @staticmethod
    def update_device(device_name: str, device_data: dict[str, Any]) -> Device:
        """Update the device from device data."""
        ...

    def __getattr__(self, name: str) -> Object: ...

class DeviceDict:
    """Represent a dictionary of all BACnet devices on the network."""

    devices: dict[str, Device] = ...
    def __init__(self, data: dict[str, Any]) -> None: ...
    def update_from_data(self, data: dict[str, Device | dict[str, Any]]) -> Self:
        """Update the device dictionary from received data"""
        ...
